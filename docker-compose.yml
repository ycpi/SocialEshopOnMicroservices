version: "3"
services:
  postgres:
    image: library/postgres:12.0
    container_name: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: 123456
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: eshop
      POSTGRES_DB: Identification
#    restart: unless-stopped

  nacos:
    image: nacos/nacos-server:1.3.1
    container_name: nacos
    depends_on:
      - postgres
    environment:
      MODE: standalone
      NACOS_APPLICATION_PORT: 9999
      JVM_XMS: 512m
      JVM_MMS: 320m
    volumes:
      - ./docker/nacos/standalone-logs/:/home/nacos/logs
      - ./docker/nacos/plugins/:/home/nacos/plugins
      - ./docker/nacos/conf/application.properties:/home/nacos/conf/application.properties
    ports:
      - "9999:9999"

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./docker/nacos/prometheus/prometheus-standalone.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9091:9090"
    depends_on:
      - nacos
    restart: on-failure

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    restart: on-failure

#  springbootapp:
#    container_name: identification-server
#    build: identification
#    user: root
#    ports:
#      - "9090:9090"
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    depends_on:
#      postgres:
#        condition: service_healthy
#
#  inventory:
#    container_name: inventory-server
#    build: microservices/inventory_service
#    user: root
#    environment:
#      - SPRING_PROFILES_ACTIVE=docker
#    depends_on:
#      postgres:
#        condition: service_healthy

volumes:
  postgres-data: